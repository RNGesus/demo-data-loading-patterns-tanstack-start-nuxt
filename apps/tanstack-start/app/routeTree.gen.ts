/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ShellImport } from './routes/_shell'
import { Route as ShellIndexImport } from './routes/_shell/index'
import { Route as ShellStationCountrySelectorImport } from './routes/_shell/_stationCountrySelector'
import { Route as ShellEnergyChartsCountrySelectorImport } from './routes/_shell/_energyChartsCountrySelector'
import { Route as ShellOpenLibraryIndexImport } from './routes/_shell/openLibrary/index'
import { Route as ShellStationCountrySelectorStationCountriesIndexImport } from './routes/_shell/_stationCountrySelector/stationCountries/index'
import { Route as ShellEnergyChartsCountrySelectorEnergyChartsIndexImport } from './routes/_shell/_energyChartsCountrySelector/energyCharts/index'
import { Route as ShellStationCountrySelectorStationCountriesCountryImport } from './routes/_shell/_stationCountrySelector/stationCountries/$country'
import { Route as ShellEnergyChartsCountrySelectorEnergyChartsCountryImport } from './routes/_shell/_energyChartsCountrySelector/energyCharts/$country'

// Create/Update Routes

const ShellRoute = ShellImport.update({
  id: '/_shell',
  getParentRoute: () => rootRoute,
} as any)

const ShellIndexRoute = ShellIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ShellRoute,
} as any)

const ShellStationCountrySelectorRoute =
  ShellStationCountrySelectorImport.update({
    id: '/_stationCountrySelector',
    getParentRoute: () => ShellRoute,
  } as any)

const ShellEnergyChartsCountrySelectorRoute =
  ShellEnergyChartsCountrySelectorImport.update({
    id: '/_energyChartsCountrySelector',
    getParentRoute: () => ShellRoute,
  } as any)

const ShellOpenLibraryIndexRoute = ShellOpenLibraryIndexImport.update({
  id: '/openLibrary/',
  path: '/openLibrary/',
  getParentRoute: () => ShellRoute,
} as any)

const ShellStationCountrySelectorStationCountriesIndexRoute =
  ShellStationCountrySelectorStationCountriesIndexImport.update({
    id: '/stationCountries/',
    path: '/stationCountries/',
    getParentRoute: () => ShellStationCountrySelectorRoute,
  } as any)

const ShellEnergyChartsCountrySelectorEnergyChartsIndexRoute =
  ShellEnergyChartsCountrySelectorEnergyChartsIndexImport.update({
    id: '/energyCharts/',
    path: '/energyCharts/',
    getParentRoute: () => ShellEnergyChartsCountrySelectorRoute,
  } as any)

const ShellStationCountrySelectorStationCountriesCountryRoute =
  ShellStationCountrySelectorStationCountriesCountryImport.update({
    id: '/stationCountries/$country',
    path: '/stationCountries/$country',
    getParentRoute: () => ShellStationCountrySelectorRoute,
  } as any)

const ShellEnergyChartsCountrySelectorEnergyChartsCountryRoute =
  ShellEnergyChartsCountrySelectorEnergyChartsCountryImport.update({
    id: '/energyCharts/$country',
    path: '/energyCharts/$country',
    getParentRoute: () => ShellEnergyChartsCountrySelectorRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_shell': {
      id: '/_shell'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ShellImport
      parentRoute: typeof rootRoute
    }
    '/_shell/_energyChartsCountrySelector': {
      id: '/_shell/_energyChartsCountrySelector'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ShellEnergyChartsCountrySelectorImport
      parentRoute: typeof ShellImport
    }
    '/_shell/_stationCountrySelector': {
      id: '/_shell/_stationCountrySelector'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ShellStationCountrySelectorImport
      parentRoute: typeof ShellImport
    }
    '/_shell/': {
      id: '/_shell/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ShellIndexImport
      parentRoute: typeof ShellImport
    }
    '/_shell/openLibrary/': {
      id: '/_shell/openLibrary/'
      path: '/openLibrary'
      fullPath: '/openLibrary'
      preLoaderRoute: typeof ShellOpenLibraryIndexImport
      parentRoute: typeof ShellImport
    }
    '/_shell/_energyChartsCountrySelector/energyCharts/$country': {
      id: '/_shell/_energyChartsCountrySelector/energyCharts/$country'
      path: '/energyCharts/$country'
      fullPath: '/energyCharts/$country'
      preLoaderRoute: typeof ShellEnergyChartsCountrySelectorEnergyChartsCountryImport
      parentRoute: typeof ShellEnergyChartsCountrySelectorImport
    }
    '/_shell/_stationCountrySelector/stationCountries/$country': {
      id: '/_shell/_stationCountrySelector/stationCountries/$country'
      path: '/stationCountries/$country'
      fullPath: '/stationCountries/$country'
      preLoaderRoute: typeof ShellStationCountrySelectorStationCountriesCountryImport
      parentRoute: typeof ShellStationCountrySelectorImport
    }
    '/_shell/_energyChartsCountrySelector/energyCharts/': {
      id: '/_shell/_energyChartsCountrySelector/energyCharts/'
      path: '/energyCharts'
      fullPath: '/energyCharts'
      preLoaderRoute: typeof ShellEnergyChartsCountrySelectorEnergyChartsIndexImport
      parentRoute: typeof ShellEnergyChartsCountrySelectorImport
    }
    '/_shell/_stationCountrySelector/stationCountries/': {
      id: '/_shell/_stationCountrySelector/stationCountries/'
      path: '/stationCountries'
      fullPath: '/stationCountries'
      preLoaderRoute: typeof ShellStationCountrySelectorStationCountriesIndexImport
      parentRoute: typeof ShellStationCountrySelectorImport
    }
  }
}

// Create and export the route tree

interface ShellEnergyChartsCountrySelectorRouteChildren {
  ShellEnergyChartsCountrySelectorEnergyChartsCountryRoute: typeof ShellEnergyChartsCountrySelectorEnergyChartsCountryRoute
  ShellEnergyChartsCountrySelectorEnergyChartsIndexRoute: typeof ShellEnergyChartsCountrySelectorEnergyChartsIndexRoute
}

const ShellEnergyChartsCountrySelectorRouteChildren: ShellEnergyChartsCountrySelectorRouteChildren =
  {
    ShellEnergyChartsCountrySelectorEnergyChartsCountryRoute:
      ShellEnergyChartsCountrySelectorEnergyChartsCountryRoute,
    ShellEnergyChartsCountrySelectorEnergyChartsIndexRoute:
      ShellEnergyChartsCountrySelectorEnergyChartsIndexRoute,
  }

const ShellEnergyChartsCountrySelectorRouteWithChildren =
  ShellEnergyChartsCountrySelectorRoute._addFileChildren(
    ShellEnergyChartsCountrySelectorRouteChildren,
  )

interface ShellStationCountrySelectorRouteChildren {
  ShellStationCountrySelectorStationCountriesCountryRoute: typeof ShellStationCountrySelectorStationCountriesCountryRoute
  ShellStationCountrySelectorStationCountriesIndexRoute: typeof ShellStationCountrySelectorStationCountriesIndexRoute
}

const ShellStationCountrySelectorRouteChildren: ShellStationCountrySelectorRouteChildren =
  {
    ShellStationCountrySelectorStationCountriesCountryRoute:
      ShellStationCountrySelectorStationCountriesCountryRoute,
    ShellStationCountrySelectorStationCountriesIndexRoute:
      ShellStationCountrySelectorStationCountriesIndexRoute,
  }

const ShellStationCountrySelectorRouteWithChildren =
  ShellStationCountrySelectorRoute._addFileChildren(
    ShellStationCountrySelectorRouteChildren,
  )

interface ShellRouteChildren {
  ShellEnergyChartsCountrySelectorRoute: typeof ShellEnergyChartsCountrySelectorRouteWithChildren
  ShellStationCountrySelectorRoute: typeof ShellStationCountrySelectorRouteWithChildren
  ShellIndexRoute: typeof ShellIndexRoute
  ShellOpenLibraryIndexRoute: typeof ShellOpenLibraryIndexRoute
}

const ShellRouteChildren: ShellRouteChildren = {
  ShellEnergyChartsCountrySelectorRoute:
    ShellEnergyChartsCountrySelectorRouteWithChildren,
  ShellStationCountrySelectorRoute:
    ShellStationCountrySelectorRouteWithChildren,
  ShellIndexRoute: ShellIndexRoute,
  ShellOpenLibraryIndexRoute: ShellOpenLibraryIndexRoute,
}

const ShellRouteWithChildren = ShellRoute._addFileChildren(ShellRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof ShellStationCountrySelectorRouteWithChildren
  '/': typeof ShellIndexRoute
  '/openLibrary': typeof ShellOpenLibraryIndexRoute
  '/energyCharts/$country': typeof ShellEnergyChartsCountrySelectorEnergyChartsCountryRoute
  '/stationCountries/$country': typeof ShellStationCountrySelectorStationCountriesCountryRoute
  '/energyCharts': typeof ShellEnergyChartsCountrySelectorEnergyChartsIndexRoute
  '/stationCountries': typeof ShellStationCountrySelectorStationCountriesIndexRoute
}

export interface FileRoutesByTo {
  '': typeof ShellStationCountrySelectorRouteWithChildren
  '/': typeof ShellIndexRoute
  '/openLibrary': typeof ShellOpenLibraryIndexRoute
  '/energyCharts/$country': typeof ShellEnergyChartsCountrySelectorEnergyChartsCountryRoute
  '/stationCountries/$country': typeof ShellStationCountrySelectorStationCountriesCountryRoute
  '/energyCharts': typeof ShellEnergyChartsCountrySelectorEnergyChartsIndexRoute
  '/stationCountries': typeof ShellStationCountrySelectorStationCountriesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_shell': typeof ShellRouteWithChildren
  '/_shell/_energyChartsCountrySelector': typeof ShellEnergyChartsCountrySelectorRouteWithChildren
  '/_shell/_stationCountrySelector': typeof ShellStationCountrySelectorRouteWithChildren
  '/_shell/': typeof ShellIndexRoute
  '/_shell/openLibrary/': typeof ShellOpenLibraryIndexRoute
  '/_shell/_energyChartsCountrySelector/energyCharts/$country': typeof ShellEnergyChartsCountrySelectorEnergyChartsCountryRoute
  '/_shell/_stationCountrySelector/stationCountries/$country': typeof ShellStationCountrySelectorStationCountriesCountryRoute
  '/_shell/_energyChartsCountrySelector/energyCharts/': typeof ShellEnergyChartsCountrySelectorEnergyChartsIndexRoute
  '/_shell/_stationCountrySelector/stationCountries/': typeof ShellStationCountrySelectorStationCountriesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/'
    | '/openLibrary'
    | '/energyCharts/$country'
    | '/stationCountries/$country'
    | '/energyCharts'
    | '/stationCountries'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/'
    | '/openLibrary'
    | '/energyCharts/$country'
    | '/stationCountries/$country'
    | '/energyCharts'
    | '/stationCountries'
  id:
    | '__root__'
    | '/_shell'
    | '/_shell/_energyChartsCountrySelector'
    | '/_shell/_stationCountrySelector'
    | '/_shell/'
    | '/_shell/openLibrary/'
    | '/_shell/_energyChartsCountrySelector/energyCharts/$country'
    | '/_shell/_stationCountrySelector/stationCountries/$country'
    | '/_shell/_energyChartsCountrySelector/energyCharts/'
    | '/_shell/_stationCountrySelector/stationCountries/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  ShellRoute: typeof ShellRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  ShellRoute: ShellRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_shell"
      ]
    },
    "/_shell": {
      "filePath": "_shell.tsx",
      "children": [
        "/_shell/_energyChartsCountrySelector",
        "/_shell/_stationCountrySelector",
        "/_shell/",
        "/_shell/openLibrary/"
      ]
    },
    "/_shell/_energyChartsCountrySelector": {
      "filePath": "_shell/_energyChartsCountrySelector.tsx",
      "parent": "/_shell",
      "children": [
        "/_shell/_energyChartsCountrySelector/energyCharts/$country",
        "/_shell/_energyChartsCountrySelector/energyCharts/"
      ]
    },
    "/_shell/_stationCountrySelector": {
      "filePath": "_shell/_stationCountrySelector.tsx",
      "parent": "/_shell",
      "children": [
        "/_shell/_stationCountrySelector/stationCountries/$country",
        "/_shell/_stationCountrySelector/stationCountries/"
      ]
    },
    "/_shell/": {
      "filePath": "_shell/index.tsx",
      "parent": "/_shell"
    },
    "/_shell/openLibrary/": {
      "filePath": "_shell/openLibrary/index.tsx",
      "parent": "/_shell"
    },
    "/_shell/_energyChartsCountrySelector/energyCharts/$country": {
      "filePath": "_shell/_energyChartsCountrySelector/energyCharts/$country.tsx",
      "parent": "/_shell/_energyChartsCountrySelector"
    },
    "/_shell/_stationCountrySelector/stationCountries/$country": {
      "filePath": "_shell/_stationCountrySelector/stationCountries/$country.tsx",
      "parent": "/_shell/_stationCountrySelector"
    },
    "/_shell/_energyChartsCountrySelector/energyCharts/": {
      "filePath": "_shell/_energyChartsCountrySelector/energyCharts/index.tsx",
      "parent": "/_shell/_energyChartsCountrySelector"
    },
    "/_shell/_stationCountrySelector/stationCountries/": {
      "filePath": "_shell/_stationCountrySelector/stationCountries/index.tsx",
      "parent": "/_shell/_stationCountrySelector"
    }
  }
}
ROUTE_MANIFEST_END */
